/* ==========================================================================
   Somalia Registration Map — Overlay Layout
   File: public/css/somalia-map.css
   Purpose: Make the map occupy the full viewport and have the sidebar float
            as an overlay (desktop: left panel; mobile: bottom sheet).
   ========================================================================== */

/* ---------------------------
   Design tokens
   --------------------------- */
:root{
  --color-bg: #0c111f;            /* dark navy (UI surfaces) */
  --color-text: #ffffff;          /* primary text on dark */
  --color-accent: #007aff;        /* primary / active */
  --radius-md: 12px;

  --gap: 16px;
  --sidebar-width-expanded: 350px;
  --sidebar-width-collapsed: 80px;

  /* Stack order (map is base, overlays above) */
  --z-map: 0;
  --z-underlay: 800;
  --z-info: 900;
  --z-sidebar: 1000;
  --z-toasts: 1100;
}

/* ---------------------------
   Base & viewport
   --------------------------- */
*,
*::before,
*::after { box-sizing: border-box; }

html, body {
  height: 100%;
  margin: 0;
  padding: 0;
  background: #000; /* avoids white flash beneath map during load */
  font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", sans-serif;
  color: var(--color-text);
}

/* Ensure the main page host takes the full viewport.
   If your HTML uses a wrapper, this helps it stretch. */
body,
#app,
.main,
.page {
  min-height: 100dvh; /* better on mobile Safari */
}

/* ---------------------------
   MAP: full-viewport base layer
   We target common map container IDs/classes defensively so we don't
   rely on exact HTML names. If your map uses a different ID/class,
   it will still be covered by these grouped selectors.
   --------------------------- */
#map,
#googleMap,
#map-container,
#mapContainer,
.map,
.map-container {
  position: fixed;
  inset: 0;                 /* top:0; right:0; bottom:0; left:0 */
  width: 100%;
  height: 100dvh;
  z-index: var(--z-map);
}

/* Google Maps inner container sometimes needs height inheritance.
   This helps if the map was initially set as relative or empty. */
#map > div,
#googleMap > div,
.map > div {
  height: 100%;
}

/* Prevent any generic layout containers from shrinking the map. */
main,
.container {
  position: relative;
  min-height: 100dvh;
}

/* ---------------------------
   SIDEBAR OVERLAY (Desktop)
   The sidebar should NOT affect map layout. It floats above the map.
   --------------------------- */

/* We support either #sidebar or .sidebar. */
:is(#sidebar, .sidebar) {
  position: fixed;
  top: var(--gap);
  left: var(--gap);
  height: calc(100dvh - (var(--gap) * 2));
  width: var(--sidebar-width-collapsed);      /* collapsed by default */
  background: var(--color-bg);
  color: var(--color-text);
  border-radius: var(--radius-md);
  box-shadow:
    0 10px 30px rgba(0,0,0,0.35),
    0 2px 8px rgba(0,0,0,0.25);
  overflow: hidden;                            /* hide labels when collapsed */
  z-index: var(--z-sidebar);
  display: flex;
  flex-direction: column;

  /* Smooth width/opacity shifts when toggling collapsed/expanded */
  transition:
    width 220ms ease,
    transform 220ms ease,
    opacity 200ms ease;
}

/* Expanded state (add .sidebar--expanded via JS) */
:is(#sidebar, .sidebar).sidebar--expanded {
  width: var(--sidebar-width-expanded);
}

/* Optional inner scrolling area */
:is(#sidebar, .sidebar) .sidebar__scroll {
  overflow: auto;
  padding: 12px;
  scrollbar-width: thin;
}

/* A compact header that survives in collapsed state (icons) */
:is(#sidebar, .sidebar) .sidebar__header {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 12px;
  border-bottom: 1px solid rgba(255,255,255,0.08);
}

/* Hide long labels when collapsed if you use text next to icons */
:is(#sidebar, .sidebar):not(.sidebar--expanded) .sidebar__label {
  opacity: 0;
  pointer-events: none;
  width: 0;
  height: 0;
  overflow: hidden;
}

/* Sidebar “views” (logged-out, registration, etc.) */
:is(#sidebar, .sidebar) .sidebar-view {
  display: none;
}
:is(#sidebar, .sidebar) .sidebar-view.is-active {
  display: block;
}

/* ---------------------------
   INFO PANEL (bottom-center overlay)
   (Kept here for correct stacking above map; polish later steps.)
   --------------------------- */
.info-panel,
#infoPanel,
.info {
  position: fixed;
  left: 50%;
  bottom: var(--gap);
  transform: translateX(-50%);
  min-width: min(92vw, 720px);
  max-width: 92vw;
  background: var(--color-bg);
  color: var(--color-text);
  border-radius: var(--radius-md);
  box-shadow:
    0 10px 30px rgba(0,0,0,0.35),
    0 2px 8px rgba(0,0,0,0.25);
  padding: 12px 14px;
  z-index: var(--z-info);
  transition: opacity 200ms ease, transform 240ms ease;
}

/* Subtle “appear / slide-up” feel for content changes */
.info-panel.is-entering {
  opacity: 0;
  transform: translate(-50%, 12px);
}
.info-panel.is-entered {
  opacity: 1;
  transform: translate(-50%, 0);
}

/* ---------------------------
   MOBILE: bottom sheet behavior for the sidebar
   ≤ 768px: Sidebar becomes a bottom sheet that slides up. It still
   overlays the map and never pushes it.
   --------------------------- */
@media (max-width: 768px) {
  :is(#sidebar, .sidebar) {
    /* Convert to bottom sheet */
    top: auto;
    bottom: 0;
    left: 0;
    right: 0;
    height: 64px;                 /* collapsed peek height */
    width: 100%;
    border-radius: var(--radius-md) var(--radius-md) 0 0;

    /* Slide it down so only the header (64px) peeks */
    transform: translateY(calc(100% - 64px));
  }

  /* When “expanded”, the bottom sheet slides fully up. */
  :is(#sidebar, .sidebar).sidebar--expanded {
    height: min(78vh, 640px);
    transform: translateY(0);
    width: 100%;
  }

  /* Header area as a drag/handle zone (optional) */
  :is(#sidebar, .sidebar) .sidebar__header {
    justify-content: center;
    position: relative;
  }
  :is(#sidebar, .sidebar) .sidebar__header::before {
    content: "";
    position: absolute;
    top: 8px;
    width: 40px;
    height: 4px;
    border-radius: 999px;
    background: rgba(255,255,255,0.3);
  }

  /* Labels are allowed when the sheet is expanded */
  :is(#sidebar, .sidebar):not(.sidebar--expanded) .sidebar__label {
    display: none;
  }

  /* Keep info panel clear of the bottom sheet when open */
  .info-panel,
  #infoPanel,
  .info {
    bottom: calc(var(--gap) + 72px);
    max-width: 94vw;
    min-width: min(94vw, 720px);
  }
}

/* ---------------------------
   Buttons (minimal; for overlay clarity only)
   --------------------------- */
.button,
.btn,
.cta {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  padding: 10px 14px;
  border-radius: 10px;
  border: 1px solid rgba(255,255,255,0.12);
  background: rgba(255,255,255,0.04);
  color: var(--color-text);
  text-decoration: none;
  cursor: pointer;
  user-select: none;
  transition: background 160ms ease, transform 120ms ease;
}
.button--primary,
.btn--primary {
  background: var(--color-accent);
  border-color: transparent;
  color: #fff;
}
.button:hover,
.btn:hover { background: rgba(255,255,255,0.08); }
.button--primary:hover,
.btn--primary:hover { filter: brightness(1.05); }

/* ---------------------------
   Utility helpers
   --------------------------- */
.hidden { display: none !important; }
.sr-only {
  position: absolute !important;
  width: 1px; height: 1px;
  padding: 0; margin: -1px;
  overflow: hidden; clip: rect(0,0,0,0);
  white-space: nowrap; border: 0;
}
